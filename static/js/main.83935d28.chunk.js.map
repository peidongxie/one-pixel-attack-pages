{"version":3,"sources":["images/logo.svg","images/title.svg","images/github.svg","components/NavigationBar/index.jsx","components/SwitchWithInput/index.jsx","components/SliderWithInput/index.jsx","components/UploadButton/index.jsx","utils/request.js","components/InputForm/index.jsx","components/OutputChart/index.jsx","components/App/index.jsx","utils/serviceWorker.js","index.jsx"],"names":["module","exports","NavigationBar","id","alt","src","logo","title","href","rel","target","github","SwitchWithInput","props","state","switch","value","input","onChangeInput","bind","onChangeSwitch","parseInt","this","setState","onChange","checked","className","disabled","min","checkedChildren","defaultChecked","unCheckedChildren","React","Component","SliderWithInput","max","UploadButton","fileList","beforeUpload","file","size","error","info","status","success","response","name","slice","accept","action","icon","button","text","base","request","init","a","fetch","json","attack","validateFields","Promise","resolve","reject","values","body","JSON","stringify","method","mode","InputForm","loading","submit","getFieldDecorator","form","e","preventDefault","catch","finally","labelCol","xs","span","offset","sm","md","wrapperCol","onSubmit","Item","label","initialValue","valuePropName","htmlType","type","create","OutputChart","height","fillCanvas","fitHeight","document","getElementById","clientWidth","window","onresize","prevProps","prevState","snapshot","result","image","Image","onload","sw","width","sh","beforeCanvas","demoCanvas","createElement","afterCanvas","beforeContext","getContext","demoContext","afterContext","imageSmoothingEnabled","drawImage","offsetHeight","imageData","getImageData","data","change","x","y","r","g","b","putImageData","array","message","stress","times","Math","floor","dw","dh","before","after","isRealLabel","length","i","push","toString","percent","description","showIcon","forceFit","adjust","marginRatio","color","position","App","Header","Content","Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.83935d28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.46317b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/title.a61131cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.17540508.svg\";","import React from 'react';\nimport logo from '../../images/logo.svg';\nimport title from '../../images/title.svg'\nimport github from '../../images/github.svg';\nimport './index.css';\n\nfunction NavigationBar() {\n  return (\n    <div id={'navigation-bar'}>\n      <img alt={'logo'} id={'logo'} src={logo}/>\n      <img alt={'title'} id={'title'} src={title}/>\n      <a href={'https://github.com/peidongxie'} rel={'noopener noreferrer'} target={'_blank'}>\n        <img alt={'github'} id={'github'} src={github}/>\n      </a>\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","import React from 'react';\nimport {InputNumber, Switch} from 'antd';\nimport './index.css';\n\nclass SwitchWithInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      switch: props.value === -1,\n      input: props.value < 0 ? 0 : props.value,\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.onChangeSwitch = this.onChangeSwitch.bind(this);\n  }\n\n  onChangeInput(value) {\n    if (typeof value === 'number') {\n      value = parseInt(value);\n      if (value >= 0) {\n        this.setState({\n          input: value,\n        });\n      }\n      this.props.onChange(value);\n    }\n  }\n\n  onChangeSwitch(checked) {\n    this.setState({\n      switch: checked,\n    });\n    this.props.onChange(checked ? -1 : this.state.input);\n  }\n\n  render() {\n    return (\n      <span className={'switch-with-input'}>\n        <InputNumber disabled={this.state.switch} min={0} onChange={this.onChangeInput} value={this.state.input}/>\n        <Switch checkedChildren={'默认值'}\n                defaultChecked={this.props.value === -1}\n                onChange={this.onChangeSwitch}\n                unCheckedChildren={'自定义'}/>\n      </span>\n    )\n  }\n}\n\nexport default SwitchWithInput;\n","import React from 'react';\nimport {InputNumber, Slider} from 'antd';\nimport './index.css';\n\nclass SliderWithInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(value) {\n    if (typeof value === 'number') {\n      value = parseInt(value);\n      if (value <= this.props.max && value >= this.props.min) {\n        this.props.onChange(value);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <span className={'slider-with-input'}>\n        <InputNumber max={this.props.max} min={this.props.min} onChange={this.onChange} value={this.props.value}/>\n        <Slider max={this.props.max} min={this.props.min} onChange={this.onChange} value={this.props.value}/>\n      </span>\n    )\n  }\n}\n\nexport default SliderWithInput;","import React from 'react';\nimport {Button, message, Upload} from 'antd';\nimport './index.css';\n\nclass UploadButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: [],\n    };\n    this.beforeUpload = this.beforeUpload.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  beforeUpload(file) {\n    if (file.size > (1 << 20) * this.props.size) {\n      message.error(`文件不得大于${this.props.size}MB`);\n      return false;\n    }\n  }\n\n  onChange(info) {\n    switch (info.file.status) {\n      case 'done':\n        message.success('模型上传成功');\n        this.props.onChange(info.file.response.name);\n        break;\n      case 'error':\n        message.error('模型上传失败');\n        break;\n      case 'removed':\n        message.info('模型移除成功');\n        this.props.onChange('');\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      fileList: info.fileList.slice(-1),\n    });\n  }\n\n  render() {\n    return (\n      <Upload accept={this.props.accept}\n              action={this.props.action}\n              beforeUpload={this.beforeUpload}\n              fileList={this.state.fileList}\n              onChange={this.onChange}\n              className={'upload-button'}>\n        <Button icon={'upload'}>\n          {this.props.button}\n        </Button>\n        <small>\n          {this.props.text}\n        </small>\n      </Upload>\n    )\n  }\n}\n\nexport default UploadButton;\n","const base = 'https://api.peaceandlove.top:50001';\n\nconst request = async (input, init) => {\n  const response = await fetch(base + input, init);\n  return await response.json();\n};\n\nconst attack = async (validateFields, onChange) => {\n  const body = await new Promise((resolve, reject) => {\n    validateFields((error, values) => {\n      error === null ? resolve(values) : reject(error);\n    })\n  });\n  const json = await request('/attack', {\n    body: JSON.stringify(body),\n    method: 'POST',\n    mode: 'cors',\n  });\n  if (json.success) {\n    onChange(json);\n  }\n};\n\nexport {base, attack};\n","import React from 'react';\nimport {Button, Form, message, Switch} from 'antd';\nimport SwitchWithInput from '../SwitchWithInput';\nimport SliderWithInput from '../SliderWithInput';\nimport UploadButton from '../UploadButton';\nimport {attack, base} from '../../utils/request';\nimport './index.css';\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n    this.submit = this.submit.bind(this);\n    this.onChange = props.onChange;\n    this.getFieldDecorator = props.form.getFieldDecorator;\n    this.validateFields = props.form.validateFields;\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    attack(this.validateFields, this.onChange)\n      .catch(() => {\n        message.info('服务器罢工啦');\n      })\n      .finally(() => {\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Form labelCol={{xs: {span: 5, offset: 1}, sm: {span: 4, offset: 2}, md: {span: 3, offset: 3}}}\n            wrapperCol={{xs: 17, sm: 16, md: 15}}\n            onSubmit={this.submit}\n            id={'form'}>\n        <Form.Item label={'图像'}>\n          {this.getFieldDecorator('image', {initialValue: '', valuePropName: 'value'})(\n            <UploadButton accept={'.npy,.png'}\n                          action={base + '/file'}\n                          button={'上传(.npy/.png)'}\n                          size={0.5}\n                          text={'默认为CIFAR10随机图'}/>\n          )}\n        </Form.Item>\n        <Form.Item label={'模型'}>\n          {this.getFieldDecorator('model', {initialValue: '', valuePropName: 'value'})(\n            <UploadButton accept={'.h5'}\n                          action={base + '/file'}\n                          button={'上传(.h5)'}\n                          size={5}\n                          text={'默认为CIFAR10-CNN模型'}/>\n          )}\n        </Form.Item>\n        <Form.Item label={'标签'}>\n          {this.getFieldDecorator('label', {initialValue: -1, valuePropName: 'value'})(\n            <SwitchWithInput/>\n          )}\n        </Form.Item>\n        <Form.Item label={'扰动像素数'}>\n          {this.getFieldDecorator('count', {initialValue: 10, valuePropName: 'value'})(\n            <SliderWithInput min={0} max={20}/>\n          )}\n        </Form.Item>\n        <Form.Item label={'模型规一化'}>\n          {this.getFieldDecorator('normalized', {initialValue: true, valuePropName: 'checked'})(\n            <Switch/>\n          )}\n        </Form.Item>\n        <Form.Item wrapperCol={{span: 6, offset: 6}}>\n          <Button htmlType={'submit'} type={'danger'} icon={'block'} loading={this.state.loading} className={'submit'}>\n            Attack\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create({name: 'form'})(InputForm);\n","import React from 'react';\nimport {Alert, Skeleton} from 'antd';\nimport {Axis, Chart, Geom, Legend, Tooltip} from 'bizcharts';\nimport './index.css';\n\nclass OutputChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 210,\n    };\n    this.fillCanvas = this.fillCanvas.bind(this);\n  }\n\n  componentDidMount() {\n    const fitHeight = () => {\n      this.setState({\n        height: (document.getElementById('chart').clientWidth - 60) / 2,\n      });\n    };\n    window.onresize = fitHeight;\n    fitHeight();\n    this.fillCanvas();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.fillCanvas();\n  }\n\n  fillCanvas() {\n    const result = this.props.result;\n    if (!result.success) return;\n    const image = new Image();\n    image.src = result.image;\n    image.onload = () => {\n      const sw = result.width;\n      const sh = result.height;\n      const beforeCanvas = document.getElementById('before');\n      const demoCanvas = document.createElement('canvas');\n      const afterCanvas = document.getElementById('after');\n      const beforeContext = beforeCanvas.getContext('2d');\n      const demoContext = demoCanvas.getContext('2d');\n      const afterContext = afterCanvas.getContext('2d');\n      beforeContext.imageSmoothingEnabled = false;\n      beforeContext.drawImage(image, 0, 0, sw, sh, 0, 0, beforeCanvas.width, beforeCanvas.offsetHeight);\n      demoContext.drawImage(image, 0, 0);\n      const imageData = demoContext.getImageData(0, 0, sw, sh);\n      const data = imageData.data;\n      for (const {x, y, value} of result.change) {\n        const base = (sw * x + y) << 2;\n        const [r, g, b] = value;\n        data[base] = r;\n        data[base + 1] = g;\n        data[base + 2] = b;\n      }\n      demoContext.putImageData(imageData, 0, 0);\n      afterContext.imageSmoothingEnabled = false;\n      afterContext.drawImage(demoCanvas, 0, 0, sw, sh, 0, 0, afterCanvas.width, afterCanvas.height);\n    };\n  }\n\n  isRealLabel(array, label) {\n    const value = array[label];\n    for (const element of array) {\n      if (element > value) return false;\n    }\n    return true;\n  };\n\n  render() {\n    const result = this.props.result;\n    if (!result.success) {\n      return (\n        <div id={'chart'}>\n          <Skeleton/>\n        </div>\n      );\n    }\n    const sw = result.width;\n    const sh = result.height;\n    const times = Math.floor(160 / sw);\n    const dw = sw * times;\n    const dh = sh * times;\n    const label = result.label;\n    const before = result.before;\n    const after = result.after;\n    let message, stress, type;\n    if (!this.isRealLabel(before, label)) {\n      message = 'Bad Model';\n      stress = '但模型未被干扰的预测与标签不相符';\n      type = 'info';\n    } else if (!this.isRealLabel(after, label)) {\n      message = 'Successful Attack';\n      stress = '且改变了模型的预测结果';\n      type = 'success';\n    } else {\n      message = 'Failed Attack';\n      stress = '但未能干扰模型的预测结果';\n      type = 'error';\n    }\n    const change = result.change;\n    const length = change.length;\n    const data = [];\n    for (let i = 0; i < before.length; i++) {\n      data.push({\n        name: 'before',\n        label: i.toString(),\n        percent: before[i] / 10,\n      });\n    }\n    for (let i = 0; i < after.length; i++) {\n      data.push({\n        name: 'after',\n        label: i.toString(),\n        percent: after[i] / 10,\n      });\n    }\n    return (\n      <div id={'chart'}>\n        <div id={'comparison'}>\n          <canvas height={dh + 'px'} id={'before'} width={dw + 'px'}/>\n          <canvas height={dh + 'px'} id={'after'} width={dw + 'px'}/>\n        </div>\n        <Alert description={'攻击了' + sw + 'x' + sh + '图像的' + length + '个像素' + stress}\n               message={message}\n               showIcon={true}\n               type={type}\n               id={'alert'}\n        />\n        <Chart data={data} forceFit={true} height={this.state.height}>\n          <Axis name={'label'}/>\n          <Axis name={'percent'}/>\n          <Geom adjust={[{type: 'dodge', marginRatio: 0}]}\n                color={'name'}\n                position={'label*percent'}\n                type={'interval'}/>\n          <Legend/>\n          <Tooltip/>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nexport default OutputChart;\n","import React from 'react';\nimport {Layout} from 'antd';\nimport NavigationBar from '../NavigationBar';\nimport InputForm from '../InputForm';\nimport OutputChart from '../OutputChart';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: {\n        image: '',\n        width: 0,\n        height: 0,\n        label: 0,\n        before: [],\n        change: [],\n        after: [],\n        success: false,\n      },\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(result) {\n    this.setState({\n      result: result\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Header>\n          <NavigationBar/>\n        </Layout.Header>\n        <Layout.Content>\n          <InputForm onChange={this.onChange}/>\n          <OutputChart result={this.state.result}/>\n        </Layout.Content>\n        <Layout.Footer>Copyright © 2020 Peidong Xie</Layout.Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}